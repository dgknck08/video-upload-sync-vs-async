version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - video-network

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: videodb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: artikunutma1
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d videodb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - video-network

  videoprocessor:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: videoprocessor
    working_dir: /app
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      # Spring Boot profil ayarları
      SPRING_PROFILES_ACTIVE: docker
      
      # RabbitMQ bağlantı ayarları
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_RABBITMQ_VIRTUAL_HOST: /
      
      # Database bağlantı ayarları
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/videodb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: artikunutma1
      
      # JPA/Hibernate ayarları
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      
      # Log seviyeleri
      LOGGING_LEVEL_COM_EXAMPLE_VIDEOPROCESSOR: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_AMQP: DEBUG
      
      # Uygulama ayarları
      SERVER_PORT: 8080
      
    volumes:
      # Windows path'lerini Linux container path'lerine map et
      - ./uploads:/app/uploads
      - ./processed:/app/processed  
      - ./thumbnails:/app/thumbnails
    restart: unless-stopped
    networks:
      - video-network
    # Container'ın başlaması için bekleme süresi
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  rabbitmq_data:
    driver: local
  postgres_data:
    driver: local

networks:
  video-network:
    driver: bridge